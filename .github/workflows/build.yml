name: build

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.6, 3.7, 3.8, 3.9, pypy3]
        architecture: [x86, x64]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
          - os: windows-latest
            python: pypy3
          - os: macos-latest
            python: pypy3

    name: ${{ matrix.os }} Py ${{ matrix.python }} ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.architecture }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run pre-commit
        if: "matrix.python != 'pypy3'"
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files --verbose

      - name: Run unit tests
        run: poetry run pytest -v -k "not device"

  device_test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Device tests ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install -E http

      - name: Set up tunnel
        env:
          tlspwd: ${{ secrets.TLSPWD }}
        run: |
          openssl aes-256-cbc -k "$tlspwd" -md sha256 -in ./.ci/client-combined.pem.enc -out ./.ci/client-combined.pem -d
          export krnl="$(uname -s | tr '[:upper:]' '[:lower:]')"
          wget https://github.com/square/ghostunnel/releases/download/v1.3.1/ghostunnel-v1.3.1-$krnl-amd64-with-pkcs11 -O ghostunnel
          chmod +x ./ghostunnel
          ./ghostunnel client --listen localhost:12345 --target hsm-connector01.sthlm.in.yubico.org:8443 --keystore ./.ci/client-combined.pem --cacert ./.ci/server-crt.pem 2>/dev/null &
          sleep 3
          echo "BACKEND=$(curl http://localhost:12345/dispatcher/request)" >> $GITHUB_ENV

      - name: Run device tests
        if: ${{ env.BACKEND }}
        run: |
          echo Using backend $BACKEND
          poetry run pytest -v --backend "$BACKEND" tests/device/

      - name: Release HSM
        if: ${{ always() && env.BACKEND }}
        run: curl "http://localhost:12345/dispatcher/release?connector=$BACKEND"

  sdist:
    runs-on: ubuntu-latest
    name: Build Python source .tar.gz

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Build source package
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry build

      - name: Upload source package
        uses: actions/upload-artifact@v1
        with:
          name: python-yubihsm-sdist
          path: dist
